[
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "presentation",
    "title": "Living in a Post-Functional World",
    "language": "en",
    "content": "\"Functional Programming\" is the modern received wisdom regarding program and language design. All the cool kids talk about writing code that is \"functional\" or even \"purely functional\". However, functional programming as it is traditionally defined really doesn't cut the mustard, and if you look at how modern functional architectures are being shaped, everyone seems to have tacitly arrived at the same conclusion: more is needed.\n\nIn this talk, we will look at how modern functional languages like Scala, Clojure and even Haskell have evolved beyond the simple paradigms of the lambda calculus. We will see how the industry has really moved beyond functional programming and into the realm of something more powerful, more expressive and better suited to the task of large application architecture.",
    "video": "http://vimeo.com/66548717",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Daniel Spiewak",
        "bio": "Daniel Spiewak is a software developer based out of Boulder, CO. Over the years, he has worked with Java, Scala, Ruby, C/C++, ML, Clojure and several experimental languages. He currently spends most of his free time researching parser theory and methodologies, particularly areas where the field intersects with functional language design, domain-specific languages and type theory.\n\nDaniel has written a number of articles on his weblog, Code Commit, including his popular introductory series, Scala for Java Refugees.",
        "avatar": "http://2013.flatmap.no/m/speakers/spiewak.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/spiewak.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "presentation",
    "title": "Fun with Relational Interpreters in miniKanren",
    "language": "en",
    "video": "http://vimeo.com/66548859",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Daniel Friedman",
        "bio": "Daniel P. Friedman is Professor of Computer Science at Indiana University. He is co-author of The Little Schemer, The Seasoned Schemer, The Reasoned Schemer, The Little MLer, A Little Java: A Few Patterns, Scheme and the Art of Programming, and Essentials of Programming Languages, 3rd Edition, all published by MIT Press.",
        "avatar": "http://2013.flatmap.no/m/speakers/dan.jpg"
      },
      {
        "name": "William Byrd",
        "bio": "William E. Byrd is a Postdoctoral Researcher at the U Combinator language research group at the University of Utah. He is co-author of The Little Schemer, and co-designer of several declarative languages: miniKanren (logic programing), Harlan (GPU programming), and Kanor (cluster programming). His StarCraft 2 handle is 'Rojex' (character code 715).",
        "avatar": "http://2013.flatmap.no/m/speakers/will.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/danwill.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "presentation",
    "title": "Java 8 to the rescue!?",
    "language": "en",
    "content": "Java 8 will finally deliver us to the promised land of functional programming! So can we stop worrying now about learning Scala and Clojure and the other new kids on the block?\n\nWe'll look at what powers the new features such as Lambdas, Default Methods and Streams give us, as well as what Java is still lacking compared to other functional languages on the JVM.",
    "video": "http://vimeo.com/66548718",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Fredrik Vraalsen",
        "bio": "Fredrik works as a software developer at Knowit, where he mainly deals in Java EE development. The last couple of years he's focused on functional programming and in particluar how to apply this in his daily job as a Java developer. He's held training courses in Scala and dabbled in Clojure, and likes to speak at conferences.",
        "avatar": "http://2013.flatmap.no/m/speakers/vraalsen.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/vraalsen.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "workshop",
    "title": "From Dynamic to Static in a functional way",
    "language": "en",
    "content": "Ross Lawley is a long term Pythonista and a newbie Scalaholic. As the maintainer of the 'Casbah' Scala Driver, Ross will discuss how much trouble an inquisitive look at the Functional Programming Principles in Scala course can get you into. Six months later and many lessons learnt, Ross now works on both Python and Scala MongoDB drivers for 10gen simultaneously. While introducing MongoDB, Ross will also look at the Scala Good Stuff™, as well as the bad, and look for ways to lower the learning curve.",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Ross Lawley",
        "bio": "Ross is a Python and Scala Engineer based in London for 10gen - the company behing MongoDB. With over 10 years experience developing web applications Ross holds a deep passion for agile web development. Previously, Ross was the Software Architect for Streetlife and prior to that Ross was the lead developer for Europes largest commercial radio station owner - Global Radio Ltd.",
        "avatar": "http://2013.flatmap.no/m/speakers/lawley.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/lawley.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "presentation",
    "title": "Sketching in Scala Notebook",
    "language": "en",
    "content": "Scala Notebook provides a new way of interacting with the language, a middle ground between the austerity of the text-mode REPL and the grandiosity of an IDE. The project, based on IPython Notebook, harnesses the REPL to a local HTTP server so that you can work with Scala in the most popular interface of our time — the web browser.\n\nWhat Scala Notebook hasn't had in its public form is a way to visualize data beyond HTML tables. This talk will explore a new fork of Scala Notebook that renders data in Scalable Vector Graphics, the standard visual language of the web. Going a step further, we'll leverage the popular D3 JavaScript library to smoothly manipulate SVG using live data from Scala Notebook cells.",
    "video": "http://vimeo.com/66548724",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Nathan Hamblen",
        "bio": "Nathan Hamblen is founder of a number of Scala free software projects including Dispatch, giter8, and the Scala release announcement site [notes.implicit.ly](http://notes.implicit.ly). He is a co-founder of the Unfiltered toolkit for servicing HTTP requests in Scala, co-organizer of the ny-scala Meetup, and Director of Engineering at Meetup.",
        "avatar": "http://2013.flatmap.no/m/speakers/hamblen.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/hamblen.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "presentation",
    "title": "Latency and fault tolerance using Hystrix",
    "language": "en",
    "content": "Many applications have external dependencies which eventually fail at some point. E.g. an app calling 30 services with 99.9% naively will theoretically have 97% uptime. The reality is usually much worse (latencies, straglers, etc.).\n\nThe workshop will show how to use Scala with [Hystrix](https://github.com/Netflix/Hystrix) library to isolate errors and improve the reliability in systematic manner. We will be aiming to achieve maximal uptime and minimize latencies in simulate environment.\n\nHystrix is a Java library, so you could use it also in other JVM languages",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Jacek Migdal"
      }
    ],
    "link": "http://2013.flatmap.no/migdal.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "presentation",
    "title": "What's new in Scala 2.10?",
    "language": "en",
    "content": "Scala 2.10 arrived in January, bringing with it some every day conveniences like the standardized Futures API, String Interpolation, Value Classes, and Implicit Classes, along with the power features of Dynamic, Def Macros and Reflection. Learn how these features work together, and see how they are being used to provide the next generation of expressive, performance, and type safe libraries.",
    "video": "http://vimeo.com//66548858",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Jason Zaugg",
        "bio": "Jason Zaugg loved coding in Scala so much that he recently joined Typesafe to code in Scala. He's working on the compiler and standard library, in particular in the areas around macros and reflection. He's also been a core contributor to Scalaz and the IntelliJ Scala plugin.",
        "avatar": "http://2013.flatmap.no/m/speakers/zaugg.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/zaugg.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "workshop",
    "title": "Scala Intro",
    "language": "en",
    "content": "Jon-Anders and Morten will give you a short introduction to Scala, before we all start coding Scala. We will focus on an area that is the most fun for new Scala developers, the collections API. It tends to be an eye opener for Java developers, when they see just how easy and fun collections can be, in Scala.",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Morten Andersen-Gott",
        "bio": "Morten fell in love with Scala in 2012, when he used it to build a pet project and discovered just how easy and enjoyable coding can be in Scala. Since then, he's been dreading the verbose nature of Java code. In his spare time, Morten is often seen wearing a referee kit, either on the football field or at developer conferences.",
        "avatar": "http://2013.flatmap.no/m/speakers/andersen-gott.jpg"
      },
      {
        "name": "Jon-Anders Teigen",
        "bio": "Jon–Anders Teigen is an experienced Scala and Java software developer. As an active and long time member of the Scala community, he is a frequent speaker at events and conferences, and has contributed to a range of open source Scala projects.\n\nJon–Anders is the co–founder of scalaBin – “The Norwegian Scala User Group”, and Oslo Socially Functional – A meetup for functional programmers.",
        "avatar": "http://2013.flatmap.no/m/speakers/teigen.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/andersen-gott.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "presentation",
    "title": "Unfiltered Directives",
    "language": "en",
    "video": "http://vimeo.com/66548860",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Jon-Anders Teigen",
        "bio": "Jon–Anders Teigen is an experienced Scala and Java software developer. As an active and long time member of the Scala community, he is a frequent speaker at events and conferences, and has contributed to a range of open source Scala projects.\n\nJon–Anders is the co–founder of scalaBin – “The Norwegian Scala User Group”, and Oslo Socially Functional – A meetup for functional programmers.",
        "avatar": "http://2013.flatmap.no/m/speakers/teigen.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/teigen.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "workshop",
    "title": "Event Sourcing for Functional Programmers",
    "language": "en",
    "content": "Event Sourcing, CQRS and Memory Image are architectural patterns that often go hand in hand, and they have a strong following in the .NET community. Unfortunately, solutions found there and in existing Java frameworks follow a very object-oriented approach. However, the very ideas behind these patterns, especially event sourcing, are a natural fit for a functional programmer's mindset.\n\nIn this workshop, I will give an overview of the rationale behind employing these patterns and the tools we have available to implement them as functional programmers. This will be followed by a live coding session, in which we will build a small example application together, making use of the Eventsourced library for Scala and Akka.",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Daniel Westheide",
        "bio": "Daniel is a developer at Viaboxx, where he is building software for next-generation parcel machines using Java, Groovy and JavaScript. He has a long history with Java, dating back to the days of version 1.1, but grew passionate about functional programming several years ago. He helped create a cloud-based service for managing documents using Clojure and an architecture based on event sourcing and CQRS. He spends a lot of his free time with Scala, having contributed to several open-source projects.",
        "avatar": "http://2013.flatmap.no/m/speakers/westheide.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/westheide.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "presentation",
    "title": "Shapeless TBD",
    "language": "en",
    "content": "TBD",
    "video": "http://vimeo.com//66548722",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Miles Sabin",
        "bio": "Miles does stuff with Scala for Precog: currently he's working on the representation of the intermediate language between Quirrel (Precog's query language) and its various query/storage backends.\n\nWhen not working on Precog, he does his utmost to break Scala’s typechecker with his project shapeless and is a regular speaker at Scala and functional programming events.\n\nHe can often be found walking in the South Downs around his home in Brighton with a camera and an unfeasibly energetic English Springer Spaniel named Tigger.",
        "avatar": "http://2013.flatmap.no/m/speakers/sabin.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/sabin.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "presentation",
    "title": "Building a Scala REST API—adaptation and experiences",
    "language": "en",
    "content": "Faced with the \"Classic\" Java API - a sinkhole of hacks and technical debt - and the Finn veteran's deep lust to learn Scala, a new Scala REST API project was spawned. Consultants got hired, the coffee dispenser was filled and the task of creating a brand new API for some of the core functionality of the company was undertaken. This talk will deal with challenges associated with adapting a new programming paradigm in a OO/Java heavy organization, the side-effects that arose when throwing the old code out, choice of frameworks, performance issues and whatever else we have time to talk about.",
    "video": "http://vimeo.com/66548918",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Kåre Blakstad",
        "bio": "Kåre Blakstad is a Scala-developer at FINN.no, the Norwegian corporate equivalent of Craigslist. He usually works on the Scala core API's, but is sometimes forced to work on Java-projects. He tries to keep these disturbances to a minimum. Kåre has been working with Scala for only about 6 months and this is some of the reason why he wants to share some of the early experiences with others debating whether or not to use this epic language.\n\nHe is also a very eager beer brewer, and might have something to do with people getting a bit tipsy during flatMap 2013. Also, as you can see on the picture, he is extremely outdoorsy, and practically lives in the mountains.",
        "avatar": "http://2013.flatmap.no/m/speakers/blakstad.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/blakstad.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "presentation",
    "title": "What Every Hipster Should Know About Functional Programming",
    "language": "en",
    "content": "Different programming paradigms serve different purposes. Systems programmers prefer tools that are dumb, imperative and close to the metal. Enterprise programmers prefer tools which foster complexity, increasing billable hours and the client's dependency on the developer.\n\nAnd, let me just come clean and admit it, functional programmers do it for that delicious feeling of superiority that comes from looking down your nose at the normals in their caves banging together for loops and mutable state to make fire.\n\nTreat yourself to a crash course in the vocabulary of functional programming: higher order functions, combinators, the infinite opportunities to throw the word \"monad\" in the face of anyone who thinks an ironic moustache is enough to justify all that self-assured smugness these days. You'll never have to lose a programming argument again once you've learned where to casually toss terms like \"applicative functor\" and \"Kleisli triple\" into the conversation.\n\nThis is the War of the Hipsters. Arm yourself now, before it goes mainstream.",
    "video": "http://vimeo.com/66548720",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Bodil Stokke",
        "bio": "Bodil is a developer, frequent speaker and occasional teacher of web technology and anything that favours s-expressions. She is currently leading the web dev team at Arktekk, a charming little consultancy in Oslo, Norway. She is best known as the creator of the Catnip IDE for Clojure, and for her contributions to the field of programming language theory, especially the Facial Hair Theory of Language Design. She holds a doctorate in Metaphysics from ULC, and her favourite pony is Rainbow Dash.",
        "avatar": "http://2013.flatmap.no/m/speakers/bodil.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/bodil.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "workshop",
    "title": "Parsing A La Carte",
    "language": "en",
    "content": "Discover the deep mysteries of parsing algorithms and grammatical wizardry in everyone's favorite programming language! We will start from a basic parser combinator framework and build our way toward something much more general. Along the way, we will uncover the wonders of finite automata, parsing expression grammars, compiler-compilers, and more!",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Daniel Spiewak",
        "bio": "Daniel Spiewak is a software developer based out of Boulder, CO. Over the years, he has worked with Java, Scala, Ruby, C/C++, ML, Clojure and several experimental languages. He currently spends most of his free time researching parser theory and methodologies, particularly areas where the field intersects with functional language design, domain-specific languages and type theory.\n\nDaniel has written a number of articles on his weblog, Code Commit, including his popular introductory series, Scala for Java Refugees.",
        "avatar": "http://2013.flatmap.no/m/speakers/spiewak.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/spiewak.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "presentation",
    "title": "WTF is Datomic?",
    "language": "en",
    "content": "Datomic is a new database with a twist on client/server and the change of data over time. For example, all data is immutable. And queries run on the client, not the server. Wat!!\n\n* I'll tell you why (and when) that's a good thing.\n* I'll introduce what Datomic is and how it works. Datomic is pretty different from most of the other databases out there.\n* I'll explain how to use Datomic to store and query your data,\n* I'll showcase some of the uses for datomic other than being the database in traditional server apps.",
    "video": "http://vimeo.com/66548971",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "August Lilleaas",
        "bio": "Works in Kodemaker as a consultant/contractor. Built a fairly large (and not yet publicly available) system in Clojure, using a mix of Datomic, elasticsearch and MongoDB, with AngularJS on the client. Likes building web systems in all shapes and sizes, and being involved in the entire stack. Prefers being called a UI programmer over front end developer. Has also written a bunch of Objective-C for iOS in previous jobs.",
        "avatar": "http://2013.flatmap.no/m/speakers/lilleaas.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/lilleaas.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "workshop",
    "title": "Welcome to (Macro) Paradise",
    "language": "en",
    "content": "We'll examine macros in detail: when are they appropriate, how they are invoked by the compiler, and how you can implement them. This journey will take us from the standard Scala 2.10 release (which includes, experimentally, def-macros), through to the fabled \"Macro Paradise\", where R&D is underway to provide Type Macros and more.\n\nConcretely, we will:\n\n* Learn how to reflect on types\n* Use the REPL to experiment with compiler internals\n* Build a macro, step-by-step, to transform a block of code\n* Use reify, manual tree creation, and the new quasiquotes to construct and pattern match against trees.\n* Learn what it means to be sym-ful\n* Understand how to write (or use pre-written) tree Traversers and Transformers.\n\nPrerequisites:\n\n* Basic knowledge of git (or be sitting next to someone with said knowledge)\n* You've at least browsed through http://docs.scala-lang.org/overviews/reflection/overview.html and the \"Def Macros\" section http://docs.scala-lang.org/overviews/macros/overview.html\n* SBT 0.12.3 installed (http://scala-sbt.org)",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Jason Zaugg",
        "bio": "Jason Zaugg loved coding in Scala so much that he recently joined Typesafe to code in Scala. He's working on the compiler and standard library, in particular in the areas around macros and reflection. He's also been a core contributor to Scalaz and the IntelliJ Scala plugin.",
        "avatar": "http://2013.flatmap.no/m/speakers/zaugg.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/zaugg.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "presentation",
    "title": "F# Type Providers",
    "language": "en",
    "summary": "Consuming large-scale data in a statically typed language, using compile-time metaprogramming",
    "content": "In this 30 minute presentation, using live coding, Jonas will introduce F# Type Providers. The presentation will demonstrate how Type Providers offer a new way to consume data in a statically typed language. Type Providers is a mechanism that enables developers to write components that uses compile-time metaprogramming to produce new types.\n\nType Providers enables scenarios such as consuming a SQL database or Web Service without using traditional code generation or mapping classes. It also enables new scenarios where traditional code generation techniques would not be feasible, like consuming massive data sets such as Freebase.com or statistical data from The World Bank, all in a statically typed way with benefits such as statement completion and compile time checking.\n\nThe last part of the presentation will discuss planned features for Macros that will enable similar scenarios in future versions of Scala.",
    "video": "http://vimeo.com/66548723",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Jonas Follesø",
        "bio": "Jonas started programming the moment he got his first computer as a 11 year old, and after working with .NET for 11 years he has gained broad experience and in–depth knowledge of the .NET Framework and the C# programming language. Over the last few years one of his passions has been for programming languages in general, and functional programming in particular. Jonas is currently working for BEKK as a scientist, doing both project-work as well as keeping track of new technologies and techniques for software development.\n\nJonas is an active member of and contributor to the Norwegian developer community. He is an experienced speaker from both local user groups and larger conferences like TechEd, REMIX, MSDN Live, JavaZone, Smidig, ROOTS, Functional Programming Day and NDC.",
        "avatar": "http://2013.flatmap.no/m/speakers/follesoe.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/follesoe.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "presentation",
    "title": "From Grid to Akka!",
    "language": "en",
    "content": "During the last year we have put quite a lot of effort into creating our own simple grid-based processing engine. We define a custom process which will load and process data on a distributed data-grid. Doing parallel/asynchronous operations is done using a combination of distributed tasks and node-local data. I have, however, seen a need for more flexibility in the way processes are defined with regards to asynchronous steps and maximizing throughput and utilization of available processing resources. With this in mind I have ported a version of our processing engine to use Akka and asynchronous messages to achieve benefits in terms of scalability, error handling and a more flexible resource-utilization.\n\nThe goal of this presentation is to show the differences in working with a grid-product (Hazelcast) compared to that of Akka and actors. I will through examples explain how our system is implemented in Hazelcast, and how it can be improved using Akka. Examples will be given in both Java and Scala.",
    "video": "http://vimeo.com/66548919",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Eivind Waaler",
        "bio": "Eivind has a passion for programming languages, functional programming and elegant solutions to computer-challenges. He has almost 15 years of experience with Java projects, but discovered Scala when writing a master-thesis on implementing efficient DSLs on the JVM some years ago. Eivind is currently leading the Java department in BEKK which also includes a dedicated \"Scala & JVM\" group. The last 2 years he has been working on projects using Java grid products as Hazelcast and GemFire.",
        "avatar": "http://2013.flatmap.no/m/speakers/waaler.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/waaler.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "presentation",
    "title": "Composable Abstractions in Clojure",
    "language": "en",
    "content": "Most people agree that composabillity is a good thing, but few of us are used to working with or creating good composable abstractions. Why is that? I believe that the languages we use greatly influences the way we think, and if our languages encourage composabillity we are more likely to strive for it in our own programs.\n\nIn this talk I will give examples of how first class- and higher order functions in Clojure helps us in create composable abstractions. I will also show how we can take existing APIs and make them more composable using core library functions.\n\nAlthough the examples will be in Clojure, the same concepts applies to other languages that share the same functional idioms.",
    "video": "http://vimeo.com/66548861",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Erik Bakstad",
        "bio": "Erik is a former hockey player turned programmer, currently working at Miles. In his limited spare time he's working on a tool for documenting and visualizing system architecture, which they hope will be the same to Enterprise Architect as Git is to CVS.",
        "avatar": "http://2013.flatmap.no/m/speakers/bakstad.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/bakstad.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "workshop",
    "title": "Shapeless",
    "language": "en",
    "content": "An open ended, participant driven tour through shapeless's concepts and techniques.",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Miles Sabin",
        "bio": "Miles does stuff with Scala for Precog: currently he's working on the representation of the intermediate language between Quirrel (Precog's query language) and its various query/storage backends.\n\nWhen not working on Precog, he does his utmost to break Scala’s typechecker with his project shapeless and is a regular speaker at Scala and functional programming events.\n\nHe can often be found walking in the South Downs around his home in Brighton with a camera and an unfeasibly energetic English Springer Spaniel named Tigger.",
        "avatar": "http://2013.flatmap.no/m/speakers/sabin.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/sabin.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "presentation",
    "title": "Distributed Reactive Programming: Introducing Akka 2.2",
    "language": "en",
    "content": "While asynchronous reactive programming is a great way to utilize multicore on one machine, distributed computing has the potential of providing more resilient systems and even more cores to use!\n\nIn this talk we'll explore new features and changes in Akka 2.2 that will enable you to harness the computing power of multiple machines, get the most out of your CPUs, as well as integrate with existing software and services.\n\nPrepare for awesomeness! Bring popcorn!",
    "video": "http://vimeo.com/66548920",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Viktor Klang",
        "bio": "Viktor Klang, also known as √, is a passionate programmer with a taste for concurrency paradigms and performance optimization. Tech Lead for the Akka project at Typesafe.",
        "avatar": "http://2013.flatmap.no/m/speakers/klang.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/klang.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "workshop",
    "title": "Setting HTTP Free with Unfiltered and Dispatch",
    "language": "en",
    "content": "Unfiltered and Dispatch are two independent libraries that are built with the same philosophy: HTTP libraries have no business telling you how to build your application. But in this workshop, we'll give you some ideas of how to do that.\n\nJon-Anders Teigen and Nathan Hamblen will build and explain an Unfiltered web site that reflects current real-world conditions using web services accessed through Dispatch.",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Nathan Hamblen",
        "bio": "Nathan Hamblen is founder of a number of Scala free software projects including Dispatch, giter8, and the Scala release announcement site [notes.implicit.ly](http://notes.implicit.ly). He is a co-founder of the Unfiltered toolkit for servicing HTTP requests in Scala, co-organizer of the ny-scala Meetup, and Director of Engineering at Meetup.",
        "avatar": "http://2013.flatmap.no/m/speakers/hamblen.jpg"
      },
      {
        "name": "Jon-Anders Teigen",
        "bio": "Jon–Anders Teigen is an experienced Scala and Java software developer. As an active and long time member of the Scala community, he is a frequent speaker at events and conferences, and has contributed to a range of open source Scala projects.\n\nJon–Anders is the co–founder of scalaBin – “The Norwegian Scala User Group”, and Oslo Socially Functional – A meetup for functional programmers.",
        "avatar": "http://2013.flatmap.no/m/speakers/teigen.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/hamblen.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "presentation",
    "title": "Practical Lambda Calculus",
    "language": "en",
    "content": "Jonas and Einar have a Socratic dialogue about the purest of the purest, the Lambda Calculus. Starting with just lambdas, Jonas will build up the basics of a programming language, in order to answer Einar's naïve questions about calculations, abstractions and programming in general. The explanations will be backed by live-coding in Jonas' home-brewed Sublime Text 2 plugin that does tricks on lambda expressions.",
    "video": "http://vimeo.com/66548921",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Einar Høst",
        "bio": "Einar W. Høst is a developer and technical architect at Computas. Day time Einar heads his employer's internal Software Engineering network and holds a Ph.D. in Computer Science from the University of Oslo. Night time Einar writes an obscure technical blog, enjoys pixel art, and indulges in impractical coding projects that are more geared towards satisfying curiosity and doing the unexpected than providing business value.",
        "avatar": "http://2013.flatmap.no/m/speakers/host.jpg"
      },
      {
        "name": "Jonas Winje",
        "bio": "Jonas Winje is a developer at Computas, where he codes Smalltalk and Blub. MSc in Computer Science from the University of Oslo. He likes Programming Language Things and thinks that monads are really just Pokémon.",
        "avatar": "http://2013.flatmap.no/m/speakers/winje.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/einarjonas.html"
  },
  {
    "index": {
      "_index": "conference",
      "_type": "session"
    }
  },
  {
    "format": "presentation",
    "title": "Economies of Scala",
    "language": "en",
    "content": "For software companies in a tight employment market like the one in Norway, most technical advantages are dwarfed by one concern: Access to good developers. It clearly doesn't matter what kinds of technical advantages a new language can bring, if you can't hire any developers to work with it. On the flip side, if you can bring great developers to your project, you're probably in good shape no matter what language you have chosen.\n\nThe data from 117 developers and hundreds of job listings shows that while employers want Java developers, developers want to work with Scala or Clojure.\n\nIn this session I will start of by letting the numbers do the talking. Then the discussion will be open: Would businesses be wise to take advantage of my findings?",
    "video": "https://vimeo.com/66548972",
    "conference": {
      "group": "flatMap",
      "name": "flatMap 2013",
      "venue": "DogA"
    },
    "speakers": [
      {
        "name": "Simen Fure Jørgensen",
        "bio": "Having started his career as a Java developer, Simen went on to become co-founder and CEO of Iterate. Some might say that means Simen has joined the dark side - but he refuses to let go of his technical upbringing. His mixed career means that he takes an interest in business issues as well as technology, learning Organizational Analysis one month and Data Analysis with R the next month.",
        "avatar": "http://2013.flatmap.no/m/speakers/simen.jpg"
      }
    ],
    "link": "http://2013.flatmap.no/simen.html"
  }
]